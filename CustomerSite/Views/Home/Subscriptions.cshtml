@using Marketplace.SaaS.Accelerator.Services.Models
@model Marketplace.SaaS.Accelerator.Services.Models.SubscriptionViewModel
@{
    ViewData["Title"] = "Subscriptions";
}

<div class="subContainer">
    <div class="mainContainer">
        <br />
        @if (!Model.IsSuccess && !string.IsNullOrEmpty(Model.ErrorMessage))
        {
            <div class="alert alert-danger">
                <strong>Error!</strong> @Model.ErrorMessage
            </div>
        }
        <form method="post">
            @*<div>*@
                <div class="card-body">
                        <div class="text-left">
                            <span class="cm-section-heading">Subscriptions</span>
                        </div>
                        @if (Model.Subscriptions.Count() > 0)
                        {
                            <div class="table-responsive" style="min-height:200px !important">
                            <table id="table" class="table table-bordered dt-responsive cm-table mt20" width="100%" cellspacing="0">
                                <thead class="cm-table-head">
                                    <tr>
                                        <th class="text-left">Name</th>
                                        <th class="text-left">Offer</th>
                                        <th class="text-left">Plan</th>
                                        <th class="text-left">Quantity</th>
                                        <th class="text-left">Status</th>
                                        <th class="">Action</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (var i = 0; i < Model.Subscriptions.Count; i++)
                                    {
                                        var subscription = Model.Subscriptions[i];
                                        <tr>
                                            <td class="text-left">
                                                @Html.HiddenFor(s => s.Subscriptions[i].Id)
                                                @Html.HiddenFor(s => s.Subscriptions[i].PlanId)
                                                @subscription.Name.Replace("_", " ").Replace("-"," ")
                                            </td>
                                            <td class="text-left">@subscription.OfferId.Replace("_", " ").Replace("-"," ")</td>
                                            <td class="text-left">@subscription.PlanId.Replace("_", " ").Replace("-"," ")</td>
                                            <td class="text-left">
                                                @if (@subscription.IsPerUserPlan)
                                                {
                                                    @subscription.Quantity
                                                }
                                                else
                                                {
                                                    <span>N/A</span>
                                                }
                                            </td>
                                            <td class="text-left">@subscription.SubscriptionStatus</td>
                                            <td class="text-left  cm-ellipsis">
                                                <div class="nav-item dropdown">
                                                    <a class="nav-link dropdown cm-link-button" href="#" id="dropdown01" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"><i class="fa fa-bars"></i></a>
                                                    <div class="dropdown-menu" aria-labelledby="dropdown01">
                                                        @if (subscription.SubscriptionStatus == SubscriptionStatusEnumExtension.Subscribed)
                                                        {
                                                            <a class="dropdown-item cm-dropdown-option load" asp-action="ViewSubscription" asp-route-subscriptionId="@Model.Subscriptions[i].Id" asp-route-planId="@Model.Subscriptions[i].PlanId" asp-route-operation="Deactivate">Unsubscribe</a>
                                                            @if (subscription.AcceptSubscriptionUpdates == true)
                                                            {
                                                                <a class="dropdown-item cm-dropdown-option loadProp" onclick="ViewSubscriptionDetail('@Model.Subscriptions[i].Id')" data-target="#Mymode">Change Plan</a>      
                                                                @if (subscription.IsPerUserPlan)
                                                                {
                                                                   <a class="dropdown-item cm-dropdown-option loadProp" onclick="ViewSubscriptionQuantityDetail('@Model.Subscriptions[i].Id')" data-target="#Mymode">Change Quantity</a>
                                                                    <a class="dropdown-item cm-dropdown-option load" asp-action="ManageSubscription" asp-route-subscriptionId="@Model.Subscriptions[i].Id" asp-route-planId="@Model.Subscriptions[i].PlanId">Manage License</a>
                                                                }                                                      
                                                               
                                                            }
                                                        }
                                                        @if (subscription.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && subscription.IsAutomaticProvisioningSupported == true)
                                                        {
                                                            <a class="dropdown-item cm-dropdown-option load" asp-action="ViewSubscription" asp-route-subscriptionId="@Model.Subscriptions[i].Id" asp-route-planId="@Model.Subscriptions[i].PlanId" asp-route-operation="Activate">Activate</a>
                                                        }
                                                        @if (subscription.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && subscription.IsAutomaticProvisioningSupported == false)
                                                        {
                                                            <a class="dropdown-item cm-dropdown-option load" asp-action="ViewSubscription" asp-route-subscriptionId="@Model.Subscriptions[i].Id" asp-route-planId="@Model.Subscriptions[i].PlanId" asp-route-operation="Activate">Subscribe</a>
                                                        }
                                                        <a class="dropdown-item cm-dropdown-option loadProp" data-target="#myModal" onclick="ViewSubscriptionlogdetailsById('@Model.Subscriptions[i].Id')">Activity Log</a>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                            </div>
                        }

                        else
                        {
                            <div class="cm-panel-default mt40">
                                <div class="p-3 mr420">
                                    <p class="text-center">
                                        You do not have subscriptions yet. Please purchase the offer from Microsoft AppSource
                                    </p>
                                 </div>

                                <section class="products">
                                    <h2 class="product-title">our featured products</h2>

                                    <div class="product-cards">
                                        <a href="https://appsource.microsoft.com/en-us/product/office/WA200005940?tab=Overview" target="_blank">
                                            <div class="product-card">
                                                <div class="card-logo">
                                                    <img src="~/assets/leave-tracker-icon.png" alt="app icon" />
                                                </div>

                                                <div class="card-texts">
                                                    <h3 class="card-title">Leave Tracker</h3>
                                                    <p class="card-subtitle">
                                                     Simplify and organize leave management for your team seamlessly.
                                                    </p>
                                                </div>
                                            </div>
                                        </a>
                                        <a href="https://appsource.microsoft.com/en-us/product/office/WA200005021?tab=Overview" target="_blank">
                                            <div class="product-card">
                                                <div class="card-logo">
                                                    <img src="~/assets/employee-lookup-icon.png" alt="app icon" />
                                                </div>

                                                <div class="card-texts">
                                                    <h3 class="card-title">Employee Lookup</h3>
                                                    <p class="card-subtitle">
                                                     Effortlessly access and manage employee information.
                                                    </p>
                                                </div>
                                            </div>
                                        </a>

                                        <a href="https://appsource.microsoft.com/en-us/product/office/WA200005872?tab=Overview" target="_blank">
                                            <div class="product-card">
                                                <div class="card-logo">
                                                    <img src="~/assets/expense-claim-icon.png" alt="app icon" />
                                                </div>

                                                <div class="card-texts">
                                                    <h3 class="card-title">Expense Claims</h3>
                                                    <p class="card-subtitle">
                                                     Streamline expense reporting and reimbursement processes.
                                                    </p>
                                                </div>
                                            </div>
                                        </a>

                                    </div>
                                </section>
                               
                            </div>

                        }
                </div>
            @*</div>*@
            <!-- Modal -->
            <div class="modal fade" id="myModal" role="dialog">
            </div>
        </form>
    </div>
</div>

<script>
        // Function to run when the DOM is fully loaded
        document.addEventListener("DOMContentLoaded", function () {
        if (@TempData["isAdminPermisionError"].ToString().ToLower() == true) {
            errorconfirmDialog();
        }
        });
    function errorconfirmDialog() {
        swal({
            title: "Error",
            text: "Looks like you're not an admin, please contact your admin for access.",
            icon: "error",
            timer: 1500
        })
    }
    function ViewSubscriptionQuantityDetail(subscriptionId) {
        $.ajax({
            type: "Get",
            url: "SubscriptionQuantityDetail",
            data: { subscriptionId: subscriptionId },
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#myModal').html(data);
                $('#myModal').modal();
            },
            error: function () {
                swal({
                    title: "Error",
                    text: "Content load failed.",
                    icon: "Error"
                })
            }
        });
    }
    function ViewSubscriptionDetail(subscriptionId) {
        $.ajax({
            type: "Get",
            url: "SubscriptionDetail",
            data: { subscriptionId: subscriptionId },
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#myModal').html(data);
                $('#myModal').modal();

            },
            error: function () {
                swal({
                    title: "Error",
                    text: "Content load failed.",
                    icon: "Error"
                })
            }
        });
    }
    function ViewSubscriptionlogdetailsById(subscriptionId) {
        $.ajax({
            type: "Get",
            url: "SubscriptionLogDetail",
            data: { subscriptionId: subscriptionId },
            contentType: "application/json; charset=utf-8",
            datatype: "json",
            success: function (data) {
                $('#myModal').html(data);
                $('#myModal').modal();
            },
            error: function () {
                swal({
                    title: "Error",
                    text: "Content load failed.",
                    icon: "Error"
                })
            }
        });
    }

    function confirmDialog() {
        var newPlanName = $('#PlanId').val();
        swal({
            text: "Are you sure you want to switch to " + newPlanName + " plan?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willChange) => {
                debugger;
                if (willChange) {
                    $("#frmButton").prop("disabled", true);
                    $("#frmSpinner").prop("hidden", false);
                    $("#frmText").prop("hidden", false);
                    $("#frmSubscriptionDetail").submit();
                }
            });
    }

    function confirmQuantityDialog() {
        var newQuantity = $('#Quantity').val();
        swal({
            text: "Are you sure you want to Change the quantity to " + newQuantity + "?",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willChange) => {
                debugger;
                if (willChange) {
                    $("#frmButton").prop("disabled", true);
                    $("#frmSpinner").prop("hidden", false);
                    $("frmText").prop("hidden", false);
                    $("#frmSubscriptionQuantityDetail").submit();
                }
            });
    }
</script>