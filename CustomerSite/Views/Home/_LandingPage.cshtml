@*@using Microsoft.Marketplace.SaasKit.Models*@

@using Marketplace.SaaS.Accelerator.Services.Models
@model Marketplace.SaaS.Accelerator.Services.Models.SubscriptionResultExtension

@{
    ViewData["Title"] = "Home";
}
@if (!Model.ShowWelcomeScreen)
{
    <div class="container" id="divHome">
        <form method="post" id="frmIndex">

            <div class="text-white mt20">
                <span class="cm-section-heading">Subscription Details</span>
            </div>
            @if (Model != null && !string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger">
                    <strong>Error!</strong> Some Error Occurred During Operation!
                </div>
            }
            else
            {
                var replacedPlanId = Model.PlanId.ToString().Replace("_", " ").Replace("-", " ");
                var replacedOfferId = Model.OfferId.ToString().Replace("_", " ").Replace("-", " ");
                var replacedName = Model.Name.ToString().Replace("_", " ").Replace("-", " ");

                <div class="cm-panel-default mt20">
                    <dl class="row text-left">
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Customer Email")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.CustomerEmailAddress)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Customer Name ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.CustomerName)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("ID ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.Id)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Name ")
                        </dt>
                        <dd class="col-sm-9 p-2">
                            @replacedName
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Status ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.SubscriptionStatus)
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Offer Name ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @replacedOfferId
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Plan ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @replacedPlanId
                        </dd>
                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Purchaser Email ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.Purchaser.EmailId)
                            @Html.HiddenFor(model => model.Purchaser.EmailId)
                        </dd>

                        <dt class="col-sm-3 p-2 p10">
                            @Html.DisplayName("Azure Tenant ID ")
                        </dt>
                        <dd class="col-sm-9 p-2 p10">
                            @Html.DisplayFor(model => model.Purchaser.TenantId)
                            @Html.HiddenFor(model => model.Purchaser.TenantId)
                        </dd>

                        @if (Model.SubscriptionParameters != null && Model.SubscriptionParameters.Count() > 0)
                        {

                            for (int i = 0; i < Model.SubscriptionParameters.Count(); i++)
                            {
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].Id)
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanAttributeId)
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].ValueType)
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].PlanId)
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].OfferId)
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].SubscriptionId)
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].DisplayName)
                                @Html.HiddenFor(model => model.SubscriptionParameters[i].Type)

                                if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                {
                                    <dt class="col-sm-3 p-2 p10 @Model.SubscriptionParameters[i].Type">
                                        @Html.DisplayFor(model => model.SubscriptionParameters[i].DisplayName, new { required = "required", @class = @Model.SubscriptionParameters[i].Type })
                                        @if (Model.SubscriptionParameters[i].IsRequired == true)
                                        {<span class="red-star @Model.SubscriptionParameters[i].Type">*</span>}


                                    </dt>
                                }
                                else
                                {
                                    @if (Model.SubscriptionParameters[i].Type.ToLower() == "input")
                                    {
                                        <dt class="col-sm-3 p-2 p10 @Model.SubscriptionParameters[i].Type">
                                            @Html.DisplayFor(model => model.SubscriptionParameters[i].DisplayName)
                                        </dt>
                                    }
                                }

                                @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart)
                                {
                                    @if (Model.SubscriptionParameters[i].FromList == true)
                                    {
                                        var data = Model.SubscriptionParameters[i].ValuesList;
                                        var selectList = new SelectList(data.Split(','));


                                        <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                            {
                                                @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = @Model.SubscriptionParameters[i].Type + " form-control w-100", @required = "required", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                            }
                                            else
                                            {
                                                @Html.DropDownList(string.Format("SubscriptionParameters[{0}].Value", @i), selectList, new { @class = @Model.SubscriptionParameters[i].Type + " form-control w-100", name = string.Format("SubscriptionParameters[{0}].Value", @i), @id = string.Format("SubscriptionParameters_{0}__Value", @i) })

                                            }

                                        </dd>

                                    }
                                    else if (Model.SubscriptionParameters[i].Htmltype == "date")
                                    {
                                        <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " form-control w-100", @required = "required", @type = @Model.SubscriptionParameters[i].Htmltype })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " form-control w-100", @type = @Model.SubscriptionParameters[i].Htmltype })
                                            }

                                        </dd>
                                    }
                                    else
                                    {
                                        <dd class="col-sm-9 p-2 p10 @Model.SubscriptionParameters[i].Type">

                                            @if (Model.SubscriptionParameters[i].IsRequired == true)
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " form-control w-100", @required = "required", @type = @Model.SubscriptionParameters[i].Htmltype })
                                            }
                                            else
                                            {
                                                @Html.TextBoxFor(model => model.SubscriptionParameters[i].Value, new { @class = @Model.SubscriptionParameters[i].Type + " form-control w-100", @type = @Model.SubscriptionParameters[i].Htmltype })
                                            }

                                        </dd>
                                    }
                                }
                                else
                                {
                                    @if (Model.SubscriptionParameters[i].Type.ToLower() == "input")
                                    {
                                        <dd class="col-sm-9 p-2 p10  @Model.SubscriptionParameters[i].Type">
                                            @Html.DisplayFor(model => model.SubscriptionParameters[i].Value)
                                            @Html.HiddenFor(model => model.SubscriptionParameters[i].Value)
                                        </dd>
                                    }
                                }
                            }

                        }

                    </dl>
                </div>
                <div class="text-right">
                    @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.Subscribed)
                    {
                        <button type="submit" asp-action="SubscriptionOperation" asp-route-subscriptionId="@Model.Id" asp-route-planId="@Model.PlanId" asp-route-operation="Deactivate" asp-route-offerId="@Model.OfferId" class="cm-button-danger text-right load">Unsubscribe</button>
                        <button type="submit" asp-action="Subscriptions" class="cm-button-default text-right load">Subscription List</button>
                    }
                    @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && Model.IsAutomaticProvisioningSupported == true)
                    {
                        <a onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate','@Model.OfferId')" id="btnActive" class="cm-button-default text-right load">Activate</a>
                    }
                    @if (Model.SubscriptionStatus == SubscriptionStatusEnumExtension.PendingFulfillmentStart && Model.IsAutomaticProvisioningSupported == false)
                    {
                        <a onclick="SubscriptionOperation('@Model.Id','@Model.PlanId','Activate','@Model.OfferId')" id="btnActive" class="cm-button-default text-right load">Subscribe</a>
                    }
                </div>
            }
        </form>
    </div>
}
else
{
    <div class="hero-wrapper">
        <section class="hero-content">
            <div class="hero-img">
                <img src="~/assets/Devices-pana (1).png" alt="" />
            </div>

            <div class="hero-texts">
                <h3 class="greeting-text">hi, @if (this.User.Identity.IsAuthenticated)
                    {
                        @this.User.Identity.Name
                    }else{
                        @string.Concat("user");
                    }
                    </h3>
                <p class="sub-text">
                    Welcome to Reliance Infosystem's
                    <span class="bold-text">Offer Landing Page</span>, your central
                    hub for managing all your subscriptions effortlessly.

                   
                </p>
                <div class="hero-btn">
                    @if (this.User.Identity.IsAuthenticated)
                    {
                        <a asp-controller="Home" asp-action="Subscriptions" class="load"><i class="fa-solid fa-gear nav-icon"></i>&nbsp;&nbsp;manage subscriptions</a>
                        
                    }
                    else
                    {
                        <a class="text-white load" asp-controller="Account" asp-action="SignIn"><i class="fa fa-sign-out"></i>&nbsp;&nbsp;Sign in</a>
                    }
                </div>
            </div>
        </section>
    </div>

    <section class="products">
        <h2 class="product-title">our featured products</h2>

        <div class="product-cards">
            <a href="https://appsource.microsoft.com/en-us/product/office/WA200005940?tab=Overview" target="_blank">
            <div class="product-card">
                <div class="card-logo">
                    <img src="~/assets/leave-tracker-icon.png" alt="app icon" />
                </div>

                <div class="card-texts">
                    <h3 class="card-title">Leave Tracker</h3>
                    <p class="card-subtitle">
                            Simplify and organize leave management for your team seamlessly.
                    </p>
                </div>
            </div>
            </a>
            <a href="https://appsource.microsoft.com/en-us/product/office/WA200005021?tab=Overview" target="_blank">
                <div class="product-card">
                    <div class="card-logo">
                        <img src="~/assets/employee-lookup-icon.png" alt="app icon" />
                    </div>

                    <div class="card-texts">
                        <h3 class="card-title">Employee Lookup</h3>
                        <p class="card-subtitle">
                            Effortlessly access and manage employee information.
                        </p>
                    </div>
                </div>
            </a>

            <a href="https://appsource.microsoft.com/en-us/product/office/WA200005872?tab=Overview" target="_blank">
            <div class="product-card">
                <div class="card-logo">
                    <img src="~/assets/expense-claim-icon.png" alt="app icon" />
                </div>

                <div class="card-texts">
                    <h3 class="card-title">Expense Claims</h3>
                    <p class="card-subtitle">
                        Streamline expense reporting and reimbursement processes.
                    </p>
                </div>
            </div>
            </a>
        </div>
    </section>
}
<script type="text/javascript">

    document.addEventListener("DOMContentLoaded", function () {
        // Your code here
        document.querySelector(".modal-loader").classList.remove("hidden");

        setTimeout(function () {
            document.querySelector(".modal-loader").classList.add("hidden");
        }, 1000);
    });

    $(function () {
        $(".load").on('click', function (e) {

            //e.preventDefault() // prevent the form's normal submission

            //
            const loader = document.querySelector(".modal-loader");
            const successModal = document.querySelector(".modal-success");

            loader.classList.remove("hidden");

        });
    });

    $(function () {
        $(".loadProp").on('click', function (e) {

            //e.preventDefault() // prevent the form's normal submission

            //
            const loader = document.querySelector(".modal-loader");
            const successModal = document.querySelector(".modal-success");

            loader.classList.remove("hidden");

            setTimeout(function () {
                document.querySelector(".modal-loader").classList.add("hidden");
            }, 700);

        });
    });

    function SubscriptionOperation(subscriptionId, planId, operation, offerId) {
        if (validate()) {
            var formobject = $('#frmIndex').serialize();
            $.ajax({
                url: '/Home/SubscriptionOperation',
                type: 'POST',
                data: formobject + "&subscriptionId=" + subscriptionId + "&planId=" + planId + "&operation=" + operation + "&offerId=" + offerId,
                cache: false,
                success: function (result) {
                    document.querySelector(".modal-loader").classList.add("hidden");
                    $('#divIndex').html(result);
                },
                Error:
                    function (result) {
                        document.querySelector(".modal-loader").classList.add("hidden");
                        $('#divIndex').html(result);
                    }
            });
        }
        else {
            swal({
                title: "Required",
                text: "Please fill all required values",
                icon: "warning"
            })

        }
    }


    function validate() {
        var valid = true;
        $(':input[required]:visible').each(function () {
            if ($(this).val() == "") //check loginc here
                return valid = false;
        });
        return valid;
    }
</script>